{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robots","cardComponent","map","user","i","username","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","ErrorBoundary","state","hasError","errory","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"yKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCOCQ,EAbF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAEvB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACI,6BAAKL,IACL,4BAAIC,WCQLK,EAXE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAQO,EAAOI,GAAGX,KAAMC,MAASM,EAAOI,GAAGC,UAAhED,MAEtB,OACI,8BACKH,KCEEK,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,uBACIC,KAAM,SACNC,YAAa,gBACbd,UAAY,mCACZe,SAAYH,KCETI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,UAAzC,SACKH,EAAMI,YCiBJC,E,kDAnBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAQC,GACtBC,KAAKC,SAAS,CAAEJ,UAAS,M,+BAIzB,OAAIG,KAAKJ,MAAMC,SACJ,wDAEJG,KAAKV,MAAMI,a,GAhBEQ,aCqDbC,E,kDA9CX,aAAe,IAAD,8BACV,gBAgBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SAhB1C,EAAKX,MAAQ,CACTnB,OAAQ,GACRO,YAAa,IAJP,E,gEAQO,IAAD,OAChBwB,MAAM,8CACD7C,MAAK,SAAA8C,GAAa,OAAOA,EAASC,UAElC/C,MAAK,SAAAgD,GAAU,EAAKV,SAAS,CAACxB,OAAQkC,S,+BASrC,IAAD,EAC0BX,KAAKJ,MAA7BnB,EADF,EACEA,OAAQO,EADV,EACUA,YACT4B,EAAeZ,KAAKJ,MAAMnB,OAAOoC,QAAO,SAAAC,GAC1C,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAShC,EAAY+B,kBAEzD,OAAKtC,EAAOwC,OAKJ,sBAAK5C,UAAU,KAAf,UACI,8CACA,cAAC,EAAD,CAAWY,aAAgBe,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAUmC,WAT7B,6C,GA5BDV,a,MCDlBgB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,SAM5B7D,M","file":"static/js/main.c14c2778.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nconst Card = ({name, email,id}) => {\r\n   \r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow'>\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent = robots.map((user, i) => {\r\n        return <Card key={i} id={robots[i].id} name = {robots[i].name} email = {robots[i].username}/>\r\n    })\r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <input \r\n            type ='search'\r\n            placeholder ='search robots'\r\n            className = 'pa3 ba b--green bg-lightest-blue'\r\n            onChange = {searchChange}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', height:'1000px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    \r\n    componentDidCatch(errory, info) {\r\n        this.setState({ hasError:true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Opps. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => {return response.json();\r\n            })\r\n            .then(users => {this.setState({robots: users});\r\n            })\r\n       \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchfield } = this.state;\r\n        const filterRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if (!robots.length){\r\n            return <h1>Loading</h1>\r\n        }\r\n        else{\r\n            return (\r\n                <div className='tc'>\r\n                    <h1> RoboFriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots = {filterRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './Containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}